<Window x:Name="window" x:Class="_3D_viewer.MainWindow"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:Microsoft.Toolkit.Wpf.UI.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm ="clr-namespace:_3D_viewer.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"

   
   
        xmlns:cmd="clr-namespace:_3D_viewer.Commands"
        xmlns:glWpfControl="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl" 
        
        mc:Ignorable="d"
        Title="MainWindow"  Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" >

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>

    </Window.Resources>


    <Grid>

        <glWpfControl:GLWpfControl  x:Name="OpenTkControl" MouseMove="OpenTkControl_MouseMove" MouseLeftButtonDown="OpenTkControl_MouseLeftButtonDown" 
                                    Margin="0,0,0,0"  MouseWheel="OpenTkControl_MouseWheel"/>







        <Menu HorizontalAlignment="Left" VerticalAlignment="Top" >
            <MenuItem Header="file" Command="{Binding AddObjFileCommand }"  Height="20" Width="31">
            </MenuItem>
        </Menu>

        <DataGrid x:Name="dataGrid" AutoGenerateColumns="False" ItemsSource="{Binding list3DModel.informationAbout}"  SelectedIndex="0" CanUserAddRows="False" Width="221" HorizontalAlignment="Right" VerticalAlignment="Top">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="model name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding NameObjFile}"/>
                                <!--<Popup IsOpen="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Placement="Bottom" PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                    <Grid>
                                        <TextBox HorizontalAlignment="Left" Margin="10,558,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Text="{Binding RotationXYZ[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox HorizontalAlignment="Left" Margin="10,534,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Text="{Binding RotationXYZ[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBox HorizontalAlignment="Left" Margin="10,511,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Text="{Binding RotationXYZ[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                </Popup>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Header="IsChecked" Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                <!--<DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button VerticalAlignment="Center" HorizontalAlignment="Center" Content="Delete" Command="{Binding DeleteObjFileCommand}"/>


                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
            </DataGrid.Columns>
        </DataGrid>
        <!--<Grid Width="119" Height="123" Background="White" VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Text="{Binding AngleX, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Center" Width="120" Text="{Binding AngleY, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Bottom" Width="120" Text="{Binding  AngleZ, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
        </Grid>
        <Grid Width="119" Height="123" Background="White" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,0,128">
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Text="{Binding PositionX, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Center" Width="120" Text="{Binding PositionY, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
            <TextBox HorizontalAlignment="Right" TextWrapping="Wrap"  VerticalAlignment="Bottom" Width="120" Text="{Binding  PositionZ, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
        </Grid>
        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="140" Height="144">
        </Grid>-->

        <Grid Height="111" Width="106" HorizontalAlignment="Left" VerticalAlignment="Center">
            <RadioButton x:Name="localMatrix" Content="Local" VerticalAlignment="Top" Foreground="White" Command="{Binding SetModelMartixModCommand}" CommandParameter="localMatrix"  />
            <RadioButton x:Name="modelMatrix" Content="Model" VerticalAlignment="Center" Foreground="White" Command="{Binding SetModelMartixModCommand}" CommandParameter="modelMatrix" />
            <!--<RadioButton x:Name="viewMatrix" Content="View" VerticalAlignment="Bottom" Foreground="White" Command="{Binding SetModelMartixModCommand}" CommandParameter="viewMatrix"/>-->
        </Grid>


        

    </Grid>
</Window>
